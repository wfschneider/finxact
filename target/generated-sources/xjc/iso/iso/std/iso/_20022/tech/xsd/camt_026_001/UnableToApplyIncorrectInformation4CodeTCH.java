//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.25 at 11:22:31 AM EDT 
//


package iso.std.iso._20022.tech.xsd.camt_026_001;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for UnableToApplyIncorrectInformation4Code_TCH.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="UnableToApplyIncorrectInformation4Code_TCH"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="IN01"/&gt;
 *     &lt;enumeration value="IN04"/&gt;
 *     &lt;enumeration value="IN06"/&gt;
 *     &lt;enumeration value="IN15"/&gt;
 *     &lt;enumeration value="IN19"/&gt;
 *     &lt;enumeration value="IN38"/&gt;
 *     &lt;enumeration value="IN39"/&gt;
 *     &lt;enumeration value="MM20"/&gt;
 *     &lt;enumeration value="MM21"/&gt;
 *     &lt;enumeration value="NARR"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "UnableToApplyIncorrectInformation4Code_TCH")
@XmlEnum
public enum UnableToApplyIncorrectInformation4CodeTCH {

    @XmlEnumValue("IN01")
    IN_01("IN01"),
    @XmlEnumValue("IN04")
    IN_04("IN04"),
    @XmlEnumValue("IN06")
    IN_06("IN06"),
    @XmlEnumValue("IN15")
    IN_15("IN15"),
    @XmlEnumValue("IN19")
    IN_19("IN19"),
    @XmlEnumValue("IN38")
    IN_38("IN38"),
    @XmlEnumValue("IN39")
    IN_39("IN39"),
    @XmlEnumValue("MM20")
    MM_20("MM20"),
    @XmlEnumValue("MM21")
    MM_21("MM21"),
    NARR("NARR");
    private final String value;

    UnableToApplyIncorrectInformation4CodeTCH(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static UnableToApplyIncorrectInformation4CodeTCH fromValue(String v) {
        for (UnableToApplyIncorrectInformation4CodeTCH c: UnableToApplyIncorrectInformation4CodeTCH.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
