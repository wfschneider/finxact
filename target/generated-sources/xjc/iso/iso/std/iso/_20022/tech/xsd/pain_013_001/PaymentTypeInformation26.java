//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.25 at 11:22:31 AM EDT 
//


package iso.std.iso._20022.tech.xsd.pain_013_001;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for PaymentTypeInformation26 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PaymentTypeInformation26"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="SvcLvl" type="{urn:iso:std:iso:20022:tech:xsd:pain.013.001.07}ServiceLevel8Choice" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="LclInstrm" type="{urn:iso:std:iso:20022:tech:xsd:pain.013.001.07}LocalInstrument2Choice" minOccurs="0"/&gt;
 *         &lt;element name="CtgyPurp" type="{urn:iso:std:iso:20022:tech:xsd:pain.013.001.07}CategoryPurpose1Choice" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PaymentTypeInformation26", propOrder = {
    "svcLvls",
    "lclInstrm",
    "ctgyPurp"
})
public class PaymentTypeInformation26
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "SvcLvl")
    protected List<ServiceLevel8Choice> svcLvls;
    @XmlElement(name = "LclInstrm")
    protected LocalInstrument2Choice lclInstrm;
    @XmlElement(name = "CtgyPurp")
    protected CategoryPurpose1Choice ctgyPurp;

    /**
     * Gets the value of the svcLvls property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the svcLvls property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSvcLvls().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ServiceLevel8Choice }
     * 
     * 
     */
    public List<ServiceLevel8Choice> getSvcLvls() {
        if (svcLvls == null) {
            svcLvls = new ArrayList<ServiceLevel8Choice>();
        }
        return this.svcLvls;
    }

    /**
     * Gets the value of the lclInstrm property.
     * 
     * @return
     *     possible object is
     *     {@link LocalInstrument2Choice }
     *     
     */
    public LocalInstrument2Choice getLclInstrm() {
        return lclInstrm;
    }

    /**
     * Sets the value of the lclInstrm property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalInstrument2Choice }
     *     
     */
    public void setLclInstrm(LocalInstrument2Choice value) {
        this.lclInstrm = value;
    }

    /**
     * Gets the value of the ctgyPurp property.
     * 
     * @return
     *     possible object is
     *     {@link CategoryPurpose1Choice }
     *     
     */
    public CategoryPurpose1Choice getCtgyPurp() {
        return ctgyPurp;
    }

    /**
     * Sets the value of the ctgyPurp property.
     * 
     * @param value
     *     allowed object is
     *     {@link CategoryPurpose1Choice }
     *     
     */
    public void setCtgyPurp(CategoryPurpose1Choice value) {
        this.ctgyPurp = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PaymentTypeInformation26)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PaymentTypeInformation26 that = ((PaymentTypeInformation26) object);
        {
            List<ServiceLevel8Choice> lhsSvcLvls;
            lhsSvcLvls = (((this.svcLvls!= null)&&(!this.svcLvls.isEmpty()))?this.getSvcLvls():null);
            List<ServiceLevel8Choice> rhsSvcLvls;
            rhsSvcLvls = (((that.svcLvls!= null)&&(!that.svcLvls.isEmpty()))?that.getSvcLvls():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "svcLvls", lhsSvcLvls), LocatorUtils.property(thatLocator, "svcLvls", rhsSvcLvls), lhsSvcLvls, rhsSvcLvls)) {
                return false;
            }
        }
        {
            LocalInstrument2Choice lhsLclInstrm;
            lhsLclInstrm = this.getLclInstrm();
            LocalInstrument2Choice rhsLclInstrm;
            rhsLclInstrm = that.getLclInstrm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lclInstrm", lhsLclInstrm), LocatorUtils.property(thatLocator, "lclInstrm", rhsLclInstrm), lhsLclInstrm, rhsLclInstrm)) {
                return false;
            }
        }
        {
            CategoryPurpose1Choice lhsCtgyPurp;
            lhsCtgyPurp = this.getCtgyPurp();
            CategoryPurpose1Choice rhsCtgyPurp;
            rhsCtgyPurp = that.getCtgyPurp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ctgyPurp", lhsCtgyPurp), LocatorUtils.property(thatLocator, "ctgyPurp", rhsCtgyPurp), lhsCtgyPurp, rhsCtgyPurp)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<ServiceLevel8Choice> theSvcLvls;
            theSvcLvls = (((this.svcLvls!= null)&&(!this.svcLvls.isEmpty()))?this.getSvcLvls():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "svcLvls", theSvcLvls), currentHashCode, theSvcLvls);
        }
        {
            LocalInstrument2Choice theLclInstrm;
            theLclInstrm = this.getLclInstrm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lclInstrm", theLclInstrm), currentHashCode, theLclInstrm);
        }
        {
            CategoryPurpose1Choice theCtgyPurp;
            theCtgyPurp = this.getCtgyPurp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ctgyPurp", theCtgyPurp), currentHashCode, theCtgyPurp);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<ServiceLevel8Choice> theSvcLvls;
            theSvcLvls = (((this.svcLvls!= null)&&(!this.svcLvls.isEmpty()))?this.getSvcLvls():null);
            strategy.appendField(locator, this, "svcLvls", buffer, theSvcLvls);
        }
        {
            LocalInstrument2Choice theLclInstrm;
            theLclInstrm = this.getLclInstrm();
            strategy.appendField(locator, this, "lclInstrm", buffer, theLclInstrm);
        }
        {
            CategoryPurpose1Choice theCtgyPurp;
            theCtgyPurp = this.getCtgyPurp();
            strategy.appendField(locator, this, "ctgyPurp", buffer, theCtgyPurp);
        }
        return buffer;
    }

}
