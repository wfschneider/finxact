//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.25 at 11:22:31 AM EDT 
//


package iso.std.iso._20022.tech.xsd.camt_056_001;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ExternalCancellationReason1Code_TCH.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ExternalCancellationReason1Code_TCH"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="AC03"/&gt;
 *     &lt;enumeration value="AM09"/&gt;
 *     &lt;enumeration value="CUST"/&gt;
 *     &lt;enumeration value="DS24"/&gt;
 *     &lt;enumeration value="DUPL"/&gt;
 *     &lt;enumeration value="FRAD"/&gt;
 *     &lt;enumeration value="FRTR"/&gt;
 *     &lt;enumeration value="TECH"/&gt;
 *     &lt;enumeration value="UPAY"/&gt;
 *     &lt;minLength value="1"/&gt;
 *     &lt;maxLength value="4"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ExternalCancellationReason1Code_TCH")
@XmlEnum
public enum ExternalCancellationReason1CodeTCH {

    @XmlEnumValue("AC03")
    AC_03("AC03"),
    @XmlEnumValue("AM09")
    AM_09("AM09"),
    CUST("CUST"),
    @XmlEnumValue("DS24")
    DS_24("DS24"),
    DUPL("DUPL"),
    FRAD("FRAD"),
    FRTR("FRTR"),
    TECH("TECH"),
    UPAY("UPAY");
    private final String value;

    ExternalCancellationReason1CodeTCH(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ExternalCancellationReason1CodeTCH fromValue(String v) {
        for (ExternalCancellationReason1CodeTCH c: ExternalCancellationReason1CodeTCH.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
