//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.25 at 11:22:31 AM EDT 
//


package iso.std.iso._20022.tech.xsd.remt_001_001;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RemittanceAmount2 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RemittanceAmount2"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="DuePyblAmt" type="{urn:iso:std:iso:20022:tech:xsd:remt.001.001.04}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/&gt;
 *         &lt;element name="DscntApldAmt" type="{urn:iso:std:iso:20022:tech:xsd:remt.001.001.04}DiscountAmountAndType1" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="CdtNoteAmt" type="{urn:iso:std:iso:20022:tech:xsd:remt.001.001.04}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/&gt;
 *         &lt;element name="TaxAmt" type="{urn:iso:std:iso:20022:tech:xsd:remt.001.001.04}TaxAmountAndType1" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="AdjstmntAmtAndRsn" type="{urn:iso:std:iso:20022:tech:xsd:remt.001.001.04}DocumentAdjustment1" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="RmtdAmt" type="{urn:iso:std:iso:20022:tech:xsd:remt.001.001.04}ActiveOrHistoricCurrencyAndAmount" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RemittanceAmount2", propOrder = {
    "duePyblAmt",
    "dscntApldAmts",
    "cdtNoteAmt",
    "taxAmts",
    "adjstmntAmtAndRsns",
    "rmtdAmt"
})
public class RemittanceAmount2
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "DuePyblAmt")
    protected ActiveOrHistoricCurrencyAndAmount duePyblAmt;
    @XmlElement(name = "DscntApldAmt")
    protected List<DiscountAmountAndType1> dscntApldAmts;
    @XmlElement(name = "CdtNoteAmt")
    protected ActiveOrHistoricCurrencyAndAmount cdtNoteAmt;
    @XmlElement(name = "TaxAmt")
    protected List<TaxAmountAndType1> taxAmts;
    @XmlElement(name = "AdjstmntAmtAndRsn")
    protected List<DocumentAdjustment1> adjstmntAmtAndRsns;
    @XmlElement(name = "RmtdAmt")
    protected ActiveOrHistoricCurrencyAndAmount rmtdAmt;

    /**
     * Gets the value of the duePyblAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public ActiveOrHistoricCurrencyAndAmount getDuePyblAmt() {
        return duePyblAmt;
    }

    /**
     * Sets the value of the duePyblAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setDuePyblAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.duePyblAmt = value;
    }

    /**
     * Gets the value of the dscntApldAmts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dscntApldAmts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDscntApldAmts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DiscountAmountAndType1 }
     * 
     * 
     */
    public List<DiscountAmountAndType1> getDscntApldAmts() {
        if (dscntApldAmts == null) {
            dscntApldAmts = new ArrayList<DiscountAmountAndType1>();
        }
        return this.dscntApldAmts;
    }

    /**
     * Gets the value of the cdtNoteAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public ActiveOrHistoricCurrencyAndAmount getCdtNoteAmt() {
        return cdtNoteAmt;
    }

    /**
     * Sets the value of the cdtNoteAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setCdtNoteAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.cdtNoteAmt = value;
    }

    /**
     * Gets the value of the taxAmts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the taxAmts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTaxAmts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TaxAmountAndType1 }
     * 
     * 
     */
    public List<TaxAmountAndType1> getTaxAmts() {
        if (taxAmts == null) {
            taxAmts = new ArrayList<TaxAmountAndType1>();
        }
        return this.taxAmts;
    }

    /**
     * Gets the value of the adjstmntAmtAndRsns property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the adjstmntAmtAndRsns property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAdjstmntAmtAndRsns().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DocumentAdjustment1 }
     * 
     * 
     */
    public List<DocumentAdjustment1> getAdjstmntAmtAndRsns() {
        if (adjstmntAmtAndRsns == null) {
            adjstmntAmtAndRsns = new ArrayList<DocumentAdjustment1>();
        }
        return this.adjstmntAmtAndRsns;
    }

    /**
     * Gets the value of the rmtdAmt property.
     * 
     * @return
     *     possible object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public ActiveOrHistoricCurrencyAndAmount getRmtdAmt() {
        return rmtdAmt;
    }

    /**
     * Sets the value of the rmtdAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActiveOrHistoricCurrencyAndAmount }
     *     
     */
    public void setRmtdAmt(ActiveOrHistoricCurrencyAndAmount value) {
        this.rmtdAmt = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RemittanceAmount2)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RemittanceAmount2 that = ((RemittanceAmount2) object);
        {
            ActiveOrHistoricCurrencyAndAmount lhsDuePyblAmt;
            lhsDuePyblAmt = this.getDuePyblAmt();
            ActiveOrHistoricCurrencyAndAmount rhsDuePyblAmt;
            rhsDuePyblAmt = that.getDuePyblAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "duePyblAmt", lhsDuePyblAmt), LocatorUtils.property(thatLocator, "duePyblAmt", rhsDuePyblAmt), lhsDuePyblAmt, rhsDuePyblAmt)) {
                return false;
            }
        }
        {
            List<DiscountAmountAndType1> lhsDscntApldAmts;
            lhsDscntApldAmts = (((this.dscntApldAmts!= null)&&(!this.dscntApldAmts.isEmpty()))?this.getDscntApldAmts():null);
            List<DiscountAmountAndType1> rhsDscntApldAmts;
            rhsDscntApldAmts = (((that.dscntApldAmts!= null)&&(!that.dscntApldAmts.isEmpty()))?that.getDscntApldAmts():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dscntApldAmts", lhsDscntApldAmts), LocatorUtils.property(thatLocator, "dscntApldAmts", rhsDscntApldAmts), lhsDscntApldAmts, rhsDscntApldAmts)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsCdtNoteAmt;
            lhsCdtNoteAmt = this.getCdtNoteAmt();
            ActiveOrHistoricCurrencyAndAmount rhsCdtNoteAmt;
            rhsCdtNoteAmt = that.getCdtNoteAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cdtNoteAmt", lhsCdtNoteAmt), LocatorUtils.property(thatLocator, "cdtNoteAmt", rhsCdtNoteAmt), lhsCdtNoteAmt, rhsCdtNoteAmt)) {
                return false;
            }
        }
        {
            List<TaxAmountAndType1> lhsTaxAmts;
            lhsTaxAmts = (((this.taxAmts!= null)&&(!this.taxAmts.isEmpty()))?this.getTaxAmts():null);
            List<TaxAmountAndType1> rhsTaxAmts;
            rhsTaxAmts = (((that.taxAmts!= null)&&(!that.taxAmts.isEmpty()))?that.getTaxAmts():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxAmts", lhsTaxAmts), LocatorUtils.property(thatLocator, "taxAmts", rhsTaxAmts), lhsTaxAmts, rhsTaxAmts)) {
                return false;
            }
        }
        {
            List<DocumentAdjustment1> lhsAdjstmntAmtAndRsns;
            lhsAdjstmntAmtAndRsns = (((this.adjstmntAmtAndRsns!= null)&&(!this.adjstmntAmtAndRsns.isEmpty()))?this.getAdjstmntAmtAndRsns():null);
            List<DocumentAdjustment1> rhsAdjstmntAmtAndRsns;
            rhsAdjstmntAmtAndRsns = (((that.adjstmntAmtAndRsns!= null)&&(!that.adjstmntAmtAndRsns.isEmpty()))?that.getAdjstmntAmtAndRsns():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "adjstmntAmtAndRsns", lhsAdjstmntAmtAndRsns), LocatorUtils.property(thatLocator, "adjstmntAmtAndRsns", rhsAdjstmntAmtAndRsns), lhsAdjstmntAmtAndRsns, rhsAdjstmntAmtAndRsns)) {
                return false;
            }
        }
        {
            ActiveOrHistoricCurrencyAndAmount lhsRmtdAmt;
            lhsRmtdAmt = this.getRmtdAmt();
            ActiveOrHistoricCurrencyAndAmount rhsRmtdAmt;
            rhsRmtdAmt = that.getRmtdAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rmtdAmt", lhsRmtdAmt), LocatorUtils.property(thatLocator, "rmtdAmt", rhsRmtdAmt), lhsRmtdAmt, rhsRmtdAmt)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ActiveOrHistoricCurrencyAndAmount theDuePyblAmt;
            theDuePyblAmt = this.getDuePyblAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duePyblAmt", theDuePyblAmt), currentHashCode, theDuePyblAmt);
        }
        {
            List<DiscountAmountAndType1> theDscntApldAmts;
            theDscntApldAmts = (((this.dscntApldAmts!= null)&&(!this.dscntApldAmts.isEmpty()))?this.getDscntApldAmts():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dscntApldAmts", theDscntApldAmts), currentHashCode, theDscntApldAmts);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theCdtNoteAmt;
            theCdtNoteAmt = this.getCdtNoteAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cdtNoteAmt", theCdtNoteAmt), currentHashCode, theCdtNoteAmt);
        }
        {
            List<TaxAmountAndType1> theTaxAmts;
            theTaxAmts = (((this.taxAmts!= null)&&(!this.taxAmts.isEmpty()))?this.getTaxAmts():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxAmts", theTaxAmts), currentHashCode, theTaxAmts);
        }
        {
            List<DocumentAdjustment1> theAdjstmntAmtAndRsns;
            theAdjstmntAmtAndRsns = (((this.adjstmntAmtAndRsns!= null)&&(!this.adjstmntAmtAndRsns.isEmpty()))?this.getAdjstmntAmtAndRsns():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "adjstmntAmtAndRsns", theAdjstmntAmtAndRsns), currentHashCode, theAdjstmntAmtAndRsns);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theRmtdAmt;
            theRmtdAmt = this.getRmtdAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rmtdAmt", theRmtdAmt), currentHashCode, theRmtdAmt);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ActiveOrHistoricCurrencyAndAmount theDuePyblAmt;
            theDuePyblAmt = this.getDuePyblAmt();
            strategy.appendField(locator, this, "duePyblAmt", buffer, theDuePyblAmt);
        }
        {
            List<DiscountAmountAndType1> theDscntApldAmts;
            theDscntApldAmts = (((this.dscntApldAmts!= null)&&(!this.dscntApldAmts.isEmpty()))?this.getDscntApldAmts():null);
            strategy.appendField(locator, this, "dscntApldAmts", buffer, theDscntApldAmts);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theCdtNoteAmt;
            theCdtNoteAmt = this.getCdtNoteAmt();
            strategy.appendField(locator, this, "cdtNoteAmt", buffer, theCdtNoteAmt);
        }
        {
            List<TaxAmountAndType1> theTaxAmts;
            theTaxAmts = (((this.taxAmts!= null)&&(!this.taxAmts.isEmpty()))?this.getTaxAmts():null);
            strategy.appendField(locator, this, "taxAmts", buffer, theTaxAmts);
        }
        {
            List<DocumentAdjustment1> theAdjstmntAmtAndRsns;
            theAdjstmntAmtAndRsns = (((this.adjstmntAmtAndRsns!= null)&&(!this.adjstmntAmtAndRsns.isEmpty()))?this.getAdjstmntAmtAndRsns():null);
            strategy.appendField(locator, this, "adjstmntAmtAndRsns", buffer, theAdjstmntAmtAndRsns);
        }
        {
            ActiveOrHistoricCurrencyAndAmount theRmtdAmt;
            theRmtdAmt = this.getRmtdAmt();
            strategy.appendField(locator, this, "rmtdAmt", buffer, theRmtdAmt);
        }
        return buffer;
    }

}
