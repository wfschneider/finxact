//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.25 at 11:22:31 AM EDT 
//


package iso.std.iso._20022.tech.xsd.camt_029_001;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for OriginalGroupHeader18 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OriginalGroupHeader18"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="RslvdCase" type="{urn:iso:std:iso:20022:tech:xsd:camt.029.001.09}Case5" minOccurs="0"/&gt;
 *         &lt;element name="OrgnlMsgId" type="{urn:iso:std:iso:20022:tech:xsd:camt.029.001.09}Max35Text"/&gt;
 *         &lt;element name="OrgnlMsgNmId" type="{urn:iso:std:iso:20022:tech:xsd:camt.029.001.09}OrigMsgName_2019"/&gt;
 *         &lt;element name="OrgnlCreDtTm" type="{urn:iso:std:iso:20022:tech:xsd:camt.029.001.09}ISODateTime" minOccurs="0"/&gt;
 *         &lt;element name="CxlStsRsnInf" type="{urn:iso:std:iso:20022:tech:xsd:camt.029.001.09}CancellationStatusReason4" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OriginalGroupHeader18", propOrder = {
    "rslvdCase",
    "orgnlMsgId",
    "orgnlMsgNmId",
    "orgnlCreDtTm",
    "cxlStsRsnInves"
})
public class OriginalGroupHeader18
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "RslvdCase")
    protected Case5 rslvdCase;
    @XmlElement(name = "OrgnlMsgId", required = true)
    protected String orgnlMsgId;
    @XmlElement(name = "OrgnlMsgNmId", required = true)
    @XmlSchemaType(name = "string")
    protected OrigMsgName2019 orgnlMsgNmId;
    @XmlElement(name = "OrgnlCreDtTm")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar orgnlCreDtTm;
    @XmlElement(name = "CxlStsRsnInf")
    protected List<CancellationStatusReason4> cxlStsRsnInves;

    /**
     * Gets the value of the rslvdCase property.
     * 
     * @return
     *     possible object is
     *     {@link Case5 }
     *     
     */
    public Case5 getRslvdCase() {
        return rslvdCase;
    }

    /**
     * Sets the value of the rslvdCase property.
     * 
     * @param value
     *     allowed object is
     *     {@link Case5 }
     *     
     */
    public void setRslvdCase(Case5 value) {
        this.rslvdCase = value;
    }

    /**
     * Gets the value of the orgnlMsgId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOrgnlMsgId() {
        return orgnlMsgId;
    }

    /**
     * Sets the value of the orgnlMsgId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrgnlMsgId(String value) {
        this.orgnlMsgId = value;
    }

    /**
     * Gets the value of the orgnlMsgNmId property.
     * 
     * @return
     *     possible object is
     *     {@link OrigMsgName2019 }
     *     
     */
    public OrigMsgName2019 getOrgnlMsgNmId() {
        return orgnlMsgNmId;
    }

    /**
     * Sets the value of the orgnlMsgNmId property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrigMsgName2019 }
     *     
     */
    public void setOrgnlMsgNmId(OrigMsgName2019 value) {
        this.orgnlMsgNmId = value;
    }

    /**
     * Gets the value of the orgnlCreDtTm property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getOrgnlCreDtTm() {
        return orgnlCreDtTm;
    }

    /**
     * Sets the value of the orgnlCreDtTm property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setOrgnlCreDtTm(XMLGregorianCalendar value) {
        this.orgnlCreDtTm = value;
    }

    /**
     * Gets the value of the cxlStsRsnInves property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cxlStsRsnInves property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCxlStsRsnInves().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CancellationStatusReason4 }
     * 
     * 
     */
    public List<CancellationStatusReason4> getCxlStsRsnInves() {
        if (cxlStsRsnInves == null) {
            cxlStsRsnInves = new ArrayList<CancellationStatusReason4>();
        }
        return this.cxlStsRsnInves;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof OriginalGroupHeader18)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final OriginalGroupHeader18 that = ((OriginalGroupHeader18) object);
        {
            Case5 lhsRslvdCase;
            lhsRslvdCase = this.getRslvdCase();
            Case5 rhsRslvdCase;
            rhsRslvdCase = that.getRslvdCase();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rslvdCase", lhsRslvdCase), LocatorUtils.property(thatLocator, "rslvdCase", rhsRslvdCase), lhsRslvdCase, rhsRslvdCase)) {
                return false;
            }
        }
        {
            String lhsOrgnlMsgId;
            lhsOrgnlMsgId = this.getOrgnlMsgId();
            String rhsOrgnlMsgId;
            rhsOrgnlMsgId = that.getOrgnlMsgId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgnlMsgId", lhsOrgnlMsgId), LocatorUtils.property(thatLocator, "orgnlMsgId", rhsOrgnlMsgId), lhsOrgnlMsgId, rhsOrgnlMsgId)) {
                return false;
            }
        }
        {
            OrigMsgName2019 lhsOrgnlMsgNmId;
            lhsOrgnlMsgNmId = this.getOrgnlMsgNmId();
            OrigMsgName2019 rhsOrgnlMsgNmId;
            rhsOrgnlMsgNmId = that.getOrgnlMsgNmId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgnlMsgNmId", lhsOrgnlMsgNmId), LocatorUtils.property(thatLocator, "orgnlMsgNmId", rhsOrgnlMsgNmId), lhsOrgnlMsgNmId, rhsOrgnlMsgNmId)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsOrgnlCreDtTm;
            lhsOrgnlCreDtTm = this.getOrgnlCreDtTm();
            XMLGregorianCalendar rhsOrgnlCreDtTm;
            rhsOrgnlCreDtTm = that.getOrgnlCreDtTm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgnlCreDtTm", lhsOrgnlCreDtTm), LocatorUtils.property(thatLocator, "orgnlCreDtTm", rhsOrgnlCreDtTm), lhsOrgnlCreDtTm, rhsOrgnlCreDtTm)) {
                return false;
            }
        }
        {
            List<CancellationStatusReason4> lhsCxlStsRsnInves;
            lhsCxlStsRsnInves = (((this.cxlStsRsnInves!= null)&&(!this.cxlStsRsnInves.isEmpty()))?this.getCxlStsRsnInves():null);
            List<CancellationStatusReason4> rhsCxlStsRsnInves;
            rhsCxlStsRsnInves = (((that.cxlStsRsnInves!= null)&&(!that.cxlStsRsnInves.isEmpty()))?that.getCxlStsRsnInves():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cxlStsRsnInves", lhsCxlStsRsnInves), LocatorUtils.property(thatLocator, "cxlStsRsnInves", rhsCxlStsRsnInves), lhsCxlStsRsnInves, rhsCxlStsRsnInves)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Case5 theRslvdCase;
            theRslvdCase = this.getRslvdCase();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rslvdCase", theRslvdCase), currentHashCode, theRslvdCase);
        }
        {
            String theOrgnlMsgId;
            theOrgnlMsgId = this.getOrgnlMsgId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgnlMsgId", theOrgnlMsgId), currentHashCode, theOrgnlMsgId);
        }
        {
            OrigMsgName2019 theOrgnlMsgNmId;
            theOrgnlMsgNmId = this.getOrgnlMsgNmId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgnlMsgNmId", theOrgnlMsgNmId), currentHashCode, theOrgnlMsgNmId);
        }
        {
            XMLGregorianCalendar theOrgnlCreDtTm;
            theOrgnlCreDtTm = this.getOrgnlCreDtTm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgnlCreDtTm", theOrgnlCreDtTm), currentHashCode, theOrgnlCreDtTm);
        }
        {
            List<CancellationStatusReason4> theCxlStsRsnInves;
            theCxlStsRsnInves = (((this.cxlStsRsnInves!= null)&&(!this.cxlStsRsnInves.isEmpty()))?this.getCxlStsRsnInves():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cxlStsRsnInves", theCxlStsRsnInves), currentHashCode, theCxlStsRsnInves);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Case5 theRslvdCase;
            theRslvdCase = this.getRslvdCase();
            strategy.appendField(locator, this, "rslvdCase", buffer, theRslvdCase);
        }
        {
            String theOrgnlMsgId;
            theOrgnlMsgId = this.getOrgnlMsgId();
            strategy.appendField(locator, this, "orgnlMsgId", buffer, theOrgnlMsgId);
        }
        {
            OrigMsgName2019 theOrgnlMsgNmId;
            theOrgnlMsgNmId = this.getOrgnlMsgNmId();
            strategy.appendField(locator, this, "orgnlMsgNmId", buffer, theOrgnlMsgNmId);
        }
        {
            XMLGregorianCalendar theOrgnlCreDtTm;
            theOrgnlCreDtTm = this.getOrgnlCreDtTm();
            strategy.appendField(locator, this, "orgnlCreDtTm", buffer, theOrgnlCreDtTm);
        }
        {
            List<CancellationStatusReason4> theCxlStsRsnInves;
            theCxlStsRsnInves = (((this.cxlStsRsnInves!= null)&&(!this.cxlStsRsnInves.isEmpty()))?this.getCxlStsRsnInves():null);
            strategy.appendField(locator, this, "cxlStsRsnInves", buffer, theCxlStsRsnInves);
        }
        return buffer;
    }

}
